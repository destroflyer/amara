/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package amara.applications.master.client.launcher.panels;

import java.awt.Dimension;
import java.util.HashMap;
import amara.applications.master.client.MasterserverClientUtil;
import amara.applications.master.network.messages.objects.GameCharacter;

/**
 *
 * @author Carl
 */
public class PanCharacters extends javax.swing.JPanel{

    public PanCharacters(){
        initComponents();
        int panelHeight = 70;
        int y = 0;
        GameCharacter[] publicCharacters = MasterserverClientUtil.getPublicCharacters();
        for(GameCharacter character : publicCharacters){
            PanCharacters_Character panCharacter = new PanCharacters_Character(this, character);
            panCharacter.setLocation(0, y);
            panCharacter.setSize(180, panelHeight);
            panCharactersList.add(panCharacter);
            PanCharacters_CharacterInfo panInfo = new PanCharacters_CharacterInfo(character);
            panInfo.setSize(746, (int) panInfo.getPreferredSize().getHeight());
            infoPanels.put(character, panInfo);
            // Subtract 1 to avoid double borders
            y += (panelHeight - 1);
        }
        y += 1;
        panCharactersList.setPreferredSize(new Dimension(180, y));
        showCharacterInfo(publicCharacters[0]);
    }
    private HashMap<GameCharacter, PanCharacters_CharacterInfo> infoPanels = new HashMap<>();
    
    public void showCharacterInfo(GameCharacter gameCharacter){
        PanCharacters_CharacterInfo panInfo = infoPanels.get(gameCharacter);
        panCharacterInfo.removeAll();
        panCharacterInfo.add(panInfo);
        panCharacterInfo.updateUI();
        panCharacterInfo.setPreferredSize(panInfo.getSize());
        scrCharacterInfo.getVerticalScrollBar().setValue(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        panCharactersList = new javax.swing.JPanel();
        scrCharacterInfo = new javax.swing.JScrollPane();
        panCharacterInfo = new javax.swing.JPanel();

        setBackground(new java.awt.Color(30, 30, 30));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        panCharactersList.setBackground(new java.awt.Color(55, 55, 55));

        javax.swing.GroupLayout panCharactersListLayout = new javax.swing.GroupLayout(panCharactersList);
        panCharactersList.setLayout(panCharactersListLayout);
        panCharactersListLayout.setHorizontalGroup(
            panCharactersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );
        panCharactersListLayout.setVerticalGroup(
            panCharactersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panCharactersList);

        scrCharacterInfo.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrCharacterInfo.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        javax.swing.GroupLayout panCharacterInfoLayout = new javax.swing.GroupLayout(panCharacterInfo);
        panCharacterInfo.setLayout(panCharacterInfoLayout);
        panCharacterInfoLayout.setHorizontalGroup(
            panCharacterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 746, Short.MAX_VALUE)
        );
        panCharacterInfoLayout.setVerticalGroup(
            panCharacterInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
        );

        scrCharacterInfo.setViewportView(panCharacterInfo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrCharacterInfo)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scrCharacterInfo)
                    .addComponent(jScrollPane1))
                .addGap(10, 10, 10))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panCharacterInfo;
    private javax.swing.JPanel panCharactersList;
    private javax.swing.JScrollPane scrCharacterInfo;
    // End of variables declaration//GEN-END:variables
}
