/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package amara.applications.master.client.launcher.panels;

import java.awt.Dimension;
import amara.applications.ingame.entitysystem.components.units.*;
import amara.applications.ingame.shared.maps.cameras.MapCamera_3rdPerson;
import amara.applications.master.network.messages.objects.*;
import amara.core.files.FileAssets;
import amara.core.input.Keys;
import amara.core.settings.Settings;
import amara.libraries.entitysystem.templates.StaticEntityWorld;

/**
 *
 * @author Carl
 */
public class PanCharacters_CharacterInfo extends javax.swing.JPanel{

    public PanCharacters_CharacterInfo(GameCharacter character){
        initComponents();
        lblName.setText(character.getTitle());
        lblIcon.setIcon(FileAssets.getImageIcon("Interface/client/characters/" + character.getName() + "/icon_56.png"));
        int characterEntity = StaticEntityWorld.loadTemplate("units/" + character.getName());
        int panelHeight = 70;
        int y = 0;
        PassivesComponent passivesComponent = StaticEntityWorld.getEntityWorld().getComponent(characterEntity, PassivesComponent.class);
        if(passivesComponent != null){
            lblPassives.setText(((passivesComponent.getPassiveEntities().length > 1)?"Passives":"Passive") + ":");
            for(int passiveEntity : passivesComponent.getPassiveEntities()){
                PanCharacters_CharacterInfo_Spell panPassive = new PanCharacters_CharacterInfo_Spell("Passive", passiveEntity);
                panPassive.setLocation(0, y);
                panPassive.setSize(734, panelHeight);
                panPassives.add(panPassive);
                //Subtract 1 to avoid double borders
                y += (panelHeight - 1);
            }
            y += 1;
        }
        else{
            PanCharacters_CharacterInfo_NotExisting panNotExisting = new PanCharacters_CharacterInfo_NotExisting();
            panNotExisting.setSize(734, panelHeight);
            panPassives.add(panNotExisting);
            y += panelHeight;
        }
        panPassives.setSize(new Dimension(394, y));
        y = 0;
        LearnableSpellsComponent learnableSpellsComponent = StaticEntityWorld.getEntityWorld().getComponent(characterEntity, LearnableSpellsComponent.class);
        if(learnableSpellsComponent != null){
            int[] spellEntities = learnableSpellsComponent.getSpellsEntities();
            int spellsCount = 0;
            for(int i=0;i<spellEntities.length;i++){
                if(spellEntities[i] != -1){
                    String keyTitle = Keys.getTitle(Settings.getInteger("controls_" + MapCamera_3rdPerson.TYPE + "_spells_" + i));
                    PanCharacters_CharacterInfo_Spell panSpell = new PanCharacters_CharacterInfo_Spell(keyTitle, spellEntities[i]);
                    panSpell.setLocation(0, y);
                    panSpell.setSize(734, panelHeight);
                    panSpells.add(panSpell);
                    //Subtract 1 to avoid double borders
                    y += (panelHeight - 1);
                    spellsCount++;
                }
            }
            y += 1;
            lblSpells.setText(((spellsCount > 1)?"Spells":"Spell") + ":");
        }
        else{
            PanCharacters_CharacterInfo_NotExisting panNotExisting = new PanCharacters_CharacterInfo_NotExisting();
            panNotExisting.setSize(734, panelHeight);
            panSpells.add(panNotExisting);
            y += panelHeight;
        }
        txtLore.setText(character.getLore().isEmpty()?"No lore available.":character.getLore());
        panSpells.setPreferredSize(new Dimension(394, y));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIcon = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblLore = new javax.swing.JLabel();
        lblPassives = new javax.swing.JLabel();
        scrLore = new javax.swing.JScrollPane();
        txtLore = new javax.swing.JTextArea();
        panPassives = new javax.swing.JPanel();
        lblSpells = new javax.swing.JLabel();
        panSpells = new javax.swing.JPanel();

        setBackground(new java.awt.Color(55, 55, 55));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(90, 90, 90)));

        lblIcon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(90, 90, 90)));
        lblIcon.setPreferredSize(new java.awt.Dimension(30, 30));

        lblName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setText("???");
        lblName.setPreferredSize(new java.awt.Dimension(115, 30));

        lblLore.setForeground(new java.awt.Color(255, 255, 255));
        lblLore.setText("Lore:");

        lblPassives.setForeground(new java.awt.Color(255, 255, 255));
        lblPassives.setText("Passive:");

        scrLore.setBorder(null);
        scrLore.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtLore.setEditable(false);
        txtLore.setBackground(new java.awt.Color(55, 55, 55));
        txtLore.setColumns(20);
        txtLore.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        txtLore.setForeground(new java.awt.Color(255, 255, 255));
        txtLore.setLineWrap(true);
        txtLore.setRows(5);
        txtLore.setText("Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake Cheesecake.");
        txtLore.setWrapStyleWord(true);
        scrLore.setViewportView(txtLore);

        panPassives.setOpaque(false);

        javax.swing.GroupLayout panPassivesLayout = new javax.swing.GroupLayout(panPassives);
        panPassives.setLayout(panPassivesLayout);
        panPassivesLayout.setHorizontalGroup(
            panPassivesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panPassivesLayout.setVerticalGroup(
            panPassivesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        lblSpells.setForeground(new java.awt.Color(255, 255, 255));
        lblSpells.setText("Spells:");

        panSpells.setOpaque(false);

        javax.swing.GroupLayout panSpellsLayout = new javax.swing.GroupLayout(panSpells);
        panSpells.setLayout(panSpellsLayout);
        panSpellsLayout.setHorizontalGroup(
            panSpellsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panSpellsLayout.setVerticalGroup(
            panSpellsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPassives, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE))
                    .addComponent(panPassives, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSpells, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panSpells, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrLore, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addComponent(lblIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addComponent(lblPassives)
                .addGap(5, 5, 5)
                .addComponent(panPassives, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lblSpells)
                .addGap(5, 5, 5)
                .addComponent(panSpells, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lblLore)
                .addGap(5, 5, 5)
                .addComponent(scrLore, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblLore;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassives;
    private javax.swing.JLabel lblSpells;
    private javax.swing.JPanel panPassives;
    private javax.swing.JPanel panSpells;
    private javax.swing.JScrollPane scrLore;
    private javax.swing.JTextArea txtLore;
    // End of variables declaration//GEN-END:variables
}
