/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package amara.applications.master.client.launcher.panels;

import java.awt.Color;
import javax.swing.border.LineBorder;
import amara.applications.master.client.MasterserverClientUtil;
import amara.applications.master.network.messages.Message_EditActiveCharacterSkin;
import amara.applications.master.network.messages.objects.*;
import amara.core.files.FileAssets;

/**
 *
 * @author Carl
 */
public class PanGameSelection_CharacterSkin extends javax.swing.JPanel {

    public PanGameSelection_CharacterSkin(PanGameSelection_CharacterSkins panCharacterSkins, OwnedGameCharacter ownedCharacter, int characterSkinID){
        initComponents();
        this.panCharacterSkins = panCharacterSkins;
        this.ownedCharacter = ownedCharacter;
        this.characterSkinID = characterSkinID;
        lblIcon.setIcon(FileAssets.getImageIcon("Interface/client/characters/" + ownedCharacter.getCharacter().getName() + "/splash_skin_" + characterSkinID + ".png", (PANEL_WIDTH - 2), (PANEL_HEIGHT - 2 - LABEL_TITLE_HEIGHT)));
        String skinTitle = "[Default]";
        if(characterSkinID != -1){
            for(GameCharacterSkin characterSkin : ownedCharacter.getCharacter().getSkins()){
                if(characterSkin.getID() == characterSkinID){
                    skinTitle = characterSkin.getTitle();
                    break;
                }
            }
        }
        lblTitle.setText(skinTitle);
        updateBorder();
    }
    private static final int LABEL_TITLE_HEIGHT = 25;
    public static final int PANEL_WIDTH = 109;
    public static final int PANEL_HEIGHT = (int) ((1.5f * PANEL_WIDTH) + LABEL_TITLE_HEIGHT);
    private Color BORDER_COLOR_ACTIVE = new Color(0, 90, 255);
    private Color BORDER_COLOR_NOT_ACTIVE = new Color(90, 90, 90);
    private PanGameSelection_CharacterSkins panCharacterSkins;
    protected OwnedGameCharacter ownedCharacter;
    private int characterSkinID;
    private boolean isHovered;
    
    public void updateBorder(){
        Color borderColor;
        if(isHovered || (characterSkinID == ownedCharacter.getActiveSkinID())){
            borderColor = BORDER_COLOR_ACTIVE;
        }
        else{
            borderColor = BORDER_COLOR_NOT_ACTIVE;
        }
        lblIcon.setBorder(new LineBorder(borderColor));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIcon = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(30, 30, 30));

        lblIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblIconMouseExited(evt);
            }
        });

        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lblIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblIconMouseClicked
        MasterserverClientUtil.getNetworkClient().sendMessage(new Message_EditActiveCharacterSkin(ownedCharacter.getActiveSkinID(), characterSkinID));
        ownedCharacter.setActiveSkinID(characterSkinID);
        panCharacterSkins.updateCharacterSkinsPanels();
    }//GEN-LAST:event_lblIconMouseClicked

    private void lblIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblIconMouseEntered
        isHovered = true;
        updateBorder();
    }//GEN-LAST:event_lblIconMouseEntered

    private void lblIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblIconMouseExited
        isHovered = false;
        updateBorder();
    }//GEN-LAST:event_lblIconMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
}
