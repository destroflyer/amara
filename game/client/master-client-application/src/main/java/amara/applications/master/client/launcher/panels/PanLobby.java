/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanLobby.java
 *
 * Created on 02.08.2012, 23:56:34
 */
package amara.applications.master.client.launcher.panels;

import java.awt.event.ItemEvent;
import java.util.ArrayList;
import com.jme3.network.Message;
import amara.applications.ingame.shared.maps.*;
import amara.applications.master.client.MasterserverClientUtil;
import amara.applications.master.client.launcher.panels.helpers.GameCharacterInputOption;
import amara.applications.master.network.messages.*;
import amara.applications.master.network.messages.objects.*;
import amara.core.files.FileAssets;
import amara.libraries.applications.windowed.FrameUtil;
import amara.libraries.network.NetworkClient;

/**
 *
 * @author Carl
 */
public class PanLobby extends javax.swing.JPanel{

    public PanLobby(PanPlay panPlay){
        initComponents();
        this.panPlay = panPlay;
        lblMapIcon.setIcon(FileAssets.getImageIcon("Interface/client/unknown.jpg", 120, 120));
    }
    private PanPlay panPlay;
    private Lobby lobby;
    private boolean isOwner;
    private boolean isQueueing;
    private Map map;
    
    public void reset(){
        setIsQueueing(false);
    }
    
    public void update(Lobby lobby){
        this.lobby = lobby;
        isOwner = (MasterserverClientUtil.getPlayerId() == lobby.getOwner().getPlayerID());
        String mapName = lobby.getLobbyData().getMapName();
        map = MapFileHandler.load(mapName, false);
        cbxMapName.setSelectedItem(mapName);
        lblMapIcon.setIcon(FileAssets.getImageIcon("Maps/" + mapName + "/icon.png", 120, 120));
        spnTeamFormatSize1.setValue(lobby.getLobbyData().getTeamFormat().getTeamSize(0));
        spnTeamFormatSize2.setValue(lobby.getLobbyData().getTeamFormat().getTeamSize(1));
        updatePlayersList(lobby.getPlayers());
        updateControls();
    }
    
    private void updatePlayersList(ArrayList<LobbyPlayer> lobbyPlayers){
        panPlayers.removeAll();
        int y = 0;
        int panelHeight = 30;
        for(int i=0;i<lobbyPlayers.size();i++){
            PanLobby_Player panPlay_Player = new PanLobby_Player(this, lobbyPlayers.get(i));
            panPlay_Player.setLocation(0, y);
            panPlay_Player.setSize(300, panelHeight);
            panPlayers.add(panPlay_Player);
            y += panelHeight;
        }
        panPlayers.updateUI();
    }
    
    public void setIsQueueing(boolean isQueueing){
        this.isQueueing = isQueueing;
        updateControls();
    }
    
    private void updateControls(){
        boolean canChangeLobby = (isOwner && (!isQueueing));
        cbxMapName.setEnabled(canChangeLobby);
        spnTeamFormatSize1.setEnabled(canChangeLobby);
        spnTeamFormatSize2.setEnabled(canChangeLobby);
        btnInvite.setEnabled(canChangeLobby);
        btnLeave.setEnabled(!isQueueing);
        btnAddBot.setEnabled(canChangeLobby);
        btnPlay.setEnabled(isOwner || isQueueing);
        btnPlay.setText(isQueueing?"Stop":"Play");
        lblIsQueueing.setVisible(isQueueing);
        pbrIsQueueing.setVisible(isQueueing);
    }
    
    public void sendSetLobbyDataMessage(){
        String mapName = cbxMapName.getSelectedItem().toString();
        int teamSize1 = Integer.parseInt(spnTeamFormatSize1.getValue().toString());
        int teamSize2 = Integer.parseInt(spnTeamFormatSize2.getValue().toString());
        sendMessage(new Message_SetLobbyData(new LobbyData(mapName, new TeamFormat(teamSize1, teamSize2))));
    }
    
    public void sendMessage(Message message){
        NetworkClient networkClient = MasterserverClientUtil.getNetworkClient();
        networkClient.sendMessage(message);
    }

    public boolean isOwner(){
        return isOwner;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgrHostOrConnect = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblMapIcon = new javax.swing.JLabel();
        panPlayers = new javax.swing.JPanel();
        cbxMapName = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        spnTeamFormatSize1 = new javax.swing.JSpinner();
        spnTeamFormatSize2 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pbrIsQueueing = new javax.swing.JProgressBar();
        lblIsQueueing = new javax.swing.JLabel();
        btnPlay = new javax.swing.JButton();
        btnLeave = new javax.swing.JButton();
        btnInvite = new javax.swing.JButton();
        btnAddBot = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        setBackground(new java.awt.Color(30, 30, 30));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Map:");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Players:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Options:");

        lblMapIcon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(65, 65, 65)));

        panPlayers.setBackground(new java.awt.Color(30, 30, 30));

        javax.swing.GroupLayout panPlayersLayout = new javax.swing.GroupLayout(panPlayers);
        panPlayers.setLayout(panPlayersLayout);
        panPlayersLayout.setHorizontalGroup(
            panPlayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        panPlayersLayout.setVerticalGroup(
            panPlayersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 453, Short.MAX_VALUE)
        );

        cbxMapName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "testmap", "destroforest", "etherdesert", "arama", "techtest" }));
        cbxMapName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxMapNameItemStateChanged(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Team Format:");

        spnTeamFormatSize1.setModel(new javax.swing.SpinnerNumberModel(1, 0, null, 1));
        spnTeamFormatSize1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnTeamFormatSize1StateChanged(evt);
            }
        });

        spnTeamFormatSize2.setModel(new javax.swing.SpinnerNumberModel(1, 0, null, 1));
        spnTeamFormatSize2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnTeamFormatSize2StateChanged(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("vs");

        jPanel1.setOpaque(false);

        pbrIsQueueing.setIndeterminate(true);

        lblIsQueueing.setForeground(new java.awt.Color(255, 255, 255));
        lblIsQueueing.setText("In Queue:");

        btnPlay.setText("Play");
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        btnLeave.setText("Leave");
        btnLeave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeaveActionPerformed(evt);
            }
        });

        btnInvite.setText("Invite");
        btnInvite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInviteActionPerformed(evt);
            }
        });

        btnAddBot.setText("Add Bot");
        btnAddBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnLeave, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
            .addComponent(btnPlay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblIsQueueing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pbrIsQueueing, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(btnInvite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnAddBot, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnInvite, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnAddBot, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(lblIsQueueing)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pbrIsQueueing, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxMapName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMapIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spnTeamFormatSize1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnTeamFormatSize2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panPlayers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(428, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMapIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxMapName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(spnTeamFormatSize1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(spnTeamFormatSize2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 252, Short.MAX_VALUE))
                    .addComponent(panPlayers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnInviteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInviteActionPerformed
        String login = FrameUtil.showInputDialog(this, "Enter login:");
        if((login != null) && (!login.isEmpty())){
            PlayerProfileData playerProfileData = MasterserverClientUtil.getPlayerProfile(login);
            if(playerProfileData != null){
                int playerID = playerProfileData.getID();
                if(!lobby.containsHumanPlayer(playerID)){
                    PlayerStatus playerStatus = MasterserverClientUtil.getPlayerStatus(playerProfileData.getID());
                    if(playerStatus == PlayerStatus.ONLINE){
                        sendMessage(new Message_InviteLobbyPlayer(playerID));
                    }
                    else{
                        FrameUtil.showMessageDialog(this, "'" + login + "' is not available for a game.\nStatus: " + playerStatus, FrameUtil.MessageType.WARNING);
                    }
                }
                else{
                    FrameUtil.showMessageDialog(this, "'" + login + "' is already participating.", FrameUtil.MessageType.WARNING);
                }
            }
            else{
                FrameUtil.showMessageDialog(this, "Player '" + login + "' wasn't found.", FrameUtil.MessageType.ERROR);
            }
        }
    }//GEN-LAST:event_btnInviteActionPerformed

    private void btnLeaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeaveActionPerformed
        sendMessage(new Message_LeaveLobby());
        panPlay.displayCreatePanel();
    }//GEN-LAST:event_btnLeaveActionPerformed

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        if(isQueueing){
            sendMessage(new Message_CancelLobbyQueue());
        }
        else{
            sendMessage(new Message_StartLobbyQueue());
        }
    }//GEN-LAST:event_btnPlayActionPerformed

    private void cbxMapNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxMapNameItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            String mapName = cbxMapName.getSelectedItem().toString();
            if(!mapName.equals(lobby.getLobbyData().getMapName())){
                sendSetLobbyDataMessage();
            }
        }
    }//GEN-LAST:event_cbxMapNameItemStateChanged

    private void spnTeamFormatSize1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnTeamFormatSize1StateChanged
        int teamSize1 = Integer.parseInt(spnTeamFormatSize1.getValue().toString());
        if(teamSize1 != lobby.getLobbyData().getTeamFormat().getTeamSize(0)){
            sendSetLobbyDataMessage();
        }
    }//GEN-LAST:event_spnTeamFormatSize1StateChanged

    private void spnTeamFormatSize2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnTeamFormatSize2StateChanged
        int teamSize2 = Integer.parseInt(spnTeamFormatSize2.getValue().toString());
        if(teamSize2 != lobby.getLobbyData().getTeamFormat().getTeamSize(1)){
            sendSetLobbyDataMessage();
        }
    }//GEN-LAST:event_spnTeamFormatSize2StateChanged

    private void btnAddBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBotActionPerformed
        GameCharacterInputOption[] gameCharacterOptions = GameCharacterInputOption.createOptions(MasterserverClientUtil.getPublicCharacters());
        GameCharacterInputOption gameCharacterInputOption = FrameUtil.showInputDialog(this, "Choose bot character:", gameCharacterOptions);
        if(gameCharacterInputOption != null){
            GameCharacter gameCharacter = gameCharacterInputOption.getGameCharacter();
            LobbyPlayer_Bot lobbyPlayer_Bot = new LobbyPlayer_Bot(BotType.EASY, "Bot (" + gameCharacter.getTitle() + ")", new GameSelectionPlayerData(gameCharacter.getID(), null));
            sendMessage(new Message_AddLobbyBot(lobbyPlayer_Bot));
        }
    }//GEN-LAST:event_btnAddBotActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgrHostOrConnect;
    private javax.swing.JButton btnAddBot;
    private javax.swing.JButton btnInvite;
    private javax.swing.JButton btnLeave;
    private javax.swing.JButton btnPlay;
    private javax.swing.JComboBox cbxMapName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblIsQueueing;
    private javax.swing.JLabel lblMapIcon;
    private javax.swing.JPanel panPlayers;
    private javax.swing.JProgressBar pbrIsQueueing;
    private javax.swing.JSpinner spnTeamFormatSize1;
    private javax.swing.JSpinner spnTeamFormatSize2;
    // End of variables declaration//GEN-END:variables
}
