/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package amara.launcher.client.panels;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JButton;
import javax.swing.border.LineBorder;
import amara.Util;

/**
 *
 * @author Carl
 */
public class PanAvatarSelection extends javax.swing.JPanel{

    public PanAvatarSelection(PanProfile panProfile){
        initComponents();
        this.panProfile = panProfile;
        addAvatarButtons();
    }
    private static final String[] AVATARS = new String[]{
        "burning_cow",
        "cow_sun",
        "golem",
        "minion_red_forest",
        "jmonkeyengine",
        "mana_green",
        "mana_red",
        "mana_blue",
        "mana_white",
        "mana_black",
        "ether_wolf",
        "ether_woman"
    };
    private PanProfile panProfile;
    
    private void addAvatarButtons(){
        int x = 1;
        int y = 1;
        int buttonSize = 70;
        for(int i=0;i<AVATARS.length;i++){
            final String avatar = AVATARS[i];
            final JButton btnAvatar = new JButton(Util.getResourceImageIcon(getAvatarResourcePath(avatar), buttonSize, buttonSize));
            btnAvatar.addActionListener(new ActionListener(){

                @Override
                public void actionPerformed(ActionEvent evt){
                    panProfile.changeAvatar(avatar);
                }
            });
            btnAvatar.addMouseListener(new MouseAdapter(){

                @Override
                public void mouseEntered(MouseEvent evt){
                    super.mouseEntered(evt);
                    btnAvatar.setBorder(new LineBorder(Color.WHITE));
                }

                @Override
                public void mouseExited(MouseEvent evt){
                    super.mouseExited(evt);
                    btnAvatar.setBorder(null);
                }
            });
            btnAvatar.setCursor(new Cursor(Cursor.HAND_CURSOR));
            btnAvatar.setLocation(x, y);
            btnAvatar.setSize(buttonSize, buttonSize);
            add(btnAvatar);
            x += buttonSize;
            if((((i + 1) % 5) == 0)){
                x = 1;
                y += buttonSize;
            }
        }
    }
    
    public static String getAvatarResourcePath(String avatar){
        return ("/Interface/client/avatars/" + avatar + ".jpg");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgrHostOrConnect = new javax.swing.ButtonGroup();

        setBackground(new java.awt.Color(30, 30, 30));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgrHostOrConnect;
    // End of variables declaration//GEN-END:variables
}
